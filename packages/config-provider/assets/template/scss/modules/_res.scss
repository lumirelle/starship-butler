////
/// The module for creating media queries
///
/// @group res
/// @access public
/// @author Lumirelle
////

@use "sass:map";
@use "sass:meta";

/// Break-points, follow the design of Tailwind CSS.
///
/// Mobile: `xs` >= viewport width > `md`
/// Pad: `md` >= viewport width > `lg`
/// Laptop: `lg` >= viewport width > `xl`
/// Desktop: `xl` >= viewport width > `2xl`
///
/// @type Map
/// @link https://tailwindcss.com/docs/responsive-design;
$breakpoints: (
  "xs": 0,
  "sm": 40rem, // 640px
  "md": 48rem, // 768px
  "lg": 64rem, // 1024px
  "xl": 80rem, // 1280px
  "2xl": 96rem, // 1536px
) !default;

/// Create media queries by using predefined breakpoints or breakpoint value directly
///
/// @param {'xs' | 'sm' | 'md' | 'lg' | 'xl | '2xl' | Number | null} $left Start breakpoint, viewport width larger than
/// this value will apply this media query
/// @param {'xs' | 'sm' | 'md' | 'lg' | 'xl | '2xl' | Number | null} $right [null] End breakpoint, viewport width less
/// than this value will apply this media query
/// @requires $breakpoints
/// @content Media query content
/// @output Media query definition
/// @example
///   // Mobile first
///   .component {
///     // Mobile, default style (xs: 0px+)
///     padding: 16px;
///     font-size: 12px;
///
///     // Tablet (md: 768px+)
///     @include res('md') {
///       padding: 24px;
///       font-size: 16px;
///     }
///
///     // Laptop (lg: 1024px+)
///     @include res('lg') {
///       padding: 32px;
///       font-size: 20px;
///     }
///
///     // Desktop (xl: 1280px+)
///     @include res('xl') {
///       padding: 40px;
///       font-size: 24px;
///     }
///   }
///
@mixin res($left, $right: null) {
  @if meta.type-of($left) == "string" {
    $left: map.get($breakpoints, $left);
  }

  @if meta.type-of($right) == "string" {
    $right: map.get($breakpoints, $right);
  }

  @if not $right {
    @media (min-width: $left) {
      @content;
    }
  }
  @else if not $left {
    @media (max-width: $right) {
      @content;
    }
  }
  @else {
    @media (min-width: $left) and (width <= calc($right - 1px)) {
      @content;
    }
  }
}
